//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.1022
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.1022。
// 
#pragma warning disable 1591

namespace FTP_NEW.WebSmtpMail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RemoteMailSoap", Namespace="http://tempuri.org/")]
    public partial class RemoteMail : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilePathOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RemoteMail() {
            this.Url = global::FTP_NEW.Properties.Settings.Default.FTP_NEW_WebSmtpMail_RemoteMail;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event SaveFilesCompletedEventHandler SaveFilesCompleted;
        
        /// <remarks/>
        public event DeleteFilesCompletedEventHandler DeleteFilesCompleted;
        
        /// <remarks/>
        public event FilePathCompletedEventHandler FilePathCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Send(string MailTo, string MailFrom, string MailCc, string MailTitle, string MailBody, bool bAttach, string strFileName) {
            object[] results = this.Invoke("Send", new object[] {
                        MailTo,
                        MailFrom,
                        MailCc,
                        MailTitle,
                        MailBody,
                        bAttach,
                        strFileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string MailTo, string MailFrom, string MailCc, string MailTitle, string MailBody, bool bAttach, string strFileName) {
            this.SendAsync(MailTo, MailFrom, MailCc, MailTitle, MailBody, bAttach, strFileName, null);
        }
        
        /// <remarks/>
        public void SendAsync(string MailTo, string MailFrom, string MailCc, string MailTitle, string MailBody, bool bAttach, string strFileName, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        MailTo,
                        MailFrom,
                        MailCc,
                        MailTitle,
                        MailBody,
                        bAttach,
                        strFileName}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveFiles([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bt, string strFileName) {
            this.Invoke("SaveFiles", new object[] {
                        bt,
                        strFileName});
        }
        
        /// <remarks/>
        public void SaveFilesAsync(byte[] bt, string strFileName) {
            this.SaveFilesAsync(bt, strFileName, null);
        }
        
        /// <remarks/>
        public void SaveFilesAsync(byte[] bt, string strFileName, object userState) {
            if ((this.SaveFilesOperationCompleted == null)) {
                this.SaveFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFilesOperationCompleted);
            }
            this.InvokeAsync("SaveFiles", new object[] {
                        bt,
                        strFileName}, this.SaveFilesOperationCompleted, userState);
        }
        
        private void OnSaveFilesOperationCompleted(object arg) {
            if ((this.SaveFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFiles(string strFileName) {
            this.Invoke("DeleteFiles", new object[] {
                        strFileName});
        }
        
        /// <remarks/>
        public void DeleteFilesAsync(string strFileName) {
            this.DeleteFilesAsync(strFileName, null);
        }
        
        /// <remarks/>
        public void DeleteFilesAsync(string strFileName, object userState) {
            if ((this.DeleteFilesOperationCompleted == null)) {
                this.DeleteFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFilesOperationCompleted);
            }
            this.InvokeAsync("DeleteFiles", new object[] {
                        strFileName}, this.DeleteFilesOperationCompleted, userState);
        }
        
        private void OnDeleteFilesOperationCompleted(object arg) {
            if ((this.DeleteFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FilePath(string strFileName) {
            object[] results = this.Invoke("FilePath", new object[] {
                        strFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FilePathAsync(string strFileName) {
            this.FilePathAsync(strFileName, null);
        }
        
        /// <remarks/>
        public void FilePathAsync(string strFileName, object userState) {
            if ((this.FilePathOperationCompleted == null)) {
                this.FilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilePathOperationCompleted);
            }
            this.InvokeAsync("FilePath", new object[] {
                        strFileName}, this.FilePathOperationCompleted, userState);
        }
        
        private void OnFilePathOperationCompleted(object arg) {
            if ((this.FilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilePathCompleted(this, new FilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FilePathCompletedEventHandler(object sender, FilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591